import logging
from pythonjsonlogger import jsonlogger

class StructuredLogger:
    def __init__(self):
        # Create a logger object
        self.logger = logging.getLogger("StructuredLogger")
        self.logger.setLevel(logging.INFO)

        # Define the log format as JSON
        log_format = "%(asctime)s %(levelname)s %(message)s"
        formatter = jsonlogger.JsonFormatter(log_format)

        # Create a console handler and set the formatter
        console_handler = logging.StreamHandler()
        console_handler.setFormatter(formatter)

        # Add the handler to the logger
        self.logger.addHandler(console_handler)

    def log_info(self, message, extra=None):
        if extra is None:
            extra = {}
        self.logger.info(message, extra=extra)

    def log_error(self, message, extra=None):
        if extra is None:
            extra = {}
        self.logger.error(message, extra=extra)

def some_function():
    logger = StructuredLogger()
    user_id = "12345"
    action = "login"

    # Log an INFO message with structured data
    logger.log_info("User activity", extra={"user_id": user_id, "action": action})

class SomeClass:
    def __init__(self):
        self.logger = StructuredLogger()

    def some_method(self):
        user_id = "12345"
        action = "access"

        # Log an INFO message with structured data
        self.logger.log_info("User access", extra={"user_id": user_id, "action": action})

# Example usage
if __name__ == "__main__":
    some_function()

    instance = SomeClass()
    instance.some_method()
